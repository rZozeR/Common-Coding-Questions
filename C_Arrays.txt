#include <stdio.h>

void display(int ar[])
{
    int ct = 0;
    
    while (ar[ct])
    {
        printf("%d",ar[ct]);
        ct++;
    }
    printf("\n");
}

int Subarray_1(int ar[], int sum)
{
    int ct, ct2, dec;
    
    ct = 0;
    while (ar[ct])
    {
        ct2 = ct;
        dec = 0;
        while (ar[ct2])
        {
            dec += ar[ct2];
            if (dec == sum)
            {
                printf("%d\n%d - %d",sum,ct + 1,ct2 + 1);
                return (1);
            }
            else if (dec > sum)
                break;
            ct2++;
        }
        ct++;
    }
    return (-1);
}

int Missing_4(int arr[])
{
    int ct;
    
    ct = 0;
    while(arr[ct])
    {
        if (arr[ct] != ct + 1)
        {
            printf("%d is missing in %d.place which is %d\n", ct + 1, ct, arr[ct]);
            return (-1);
        }
        ct++;
    }

    printf("No missing numbers\n");
    return (0);
}

void Sort9(int arr[], int max)
{
    int ct;
    int num[3] = {0,0,0};
    
    ct = 0;
    while (ct < max)
    {
        if (arr[ct] == 0)
            num[0]++;
        else if (arr[ct] == 1)
            num[1]++;
        else if (arr[ct] == 2)
            num[2]++;
        ct++;
    }
    
    ct = 0;
    while (ct < max)
    {
        if (num[0] > 0)
        {
            arr[ct] = 0;
            num[0]--;
        }
        else if (num[1] > 0)
        {
            arr[ct] = 1;
            num[1]--;
        }
        else if (num[2] > 0)
        {
            arr[ct] = 2;
            num[2]--;
        }
        ct++;
    }
}

void Reverse13(int arr[],int rev)
{
    int ct, loop, temp, start, end;
    
    ct = 0;
    loop = rev - 1;
    while (arr[ct])
    {
        if (loop == 0)
        {
            start = ct - (rev - 1);
            end = ct;

            while (start < end)
            {
                temp = arr[start];
                arr[start] = arr[end];
                arr[end] = temp;
                start++;
                end--;
            }
            printf("%d.pos - %d\n",ct, arr[ct]);
            loop = rev;
        }
        loop--;
        ct++;
    }
}

int Element19_2(int ar[], int ct, int max, int c)
{
    int i;
    
    i = ct;
    if(c == 1)
    {
        while(i < max)
        {
            if(ar[ct] > ar[i])
                return (0);
            i++;
        }
    }
    else if (c == 2)
    {
        while(i >= 0)
        {
            if(ar[ct] < ar[i])
                return (0);
            i--;
        }
    }
    return (1);
}

int Element19(int arr[], int max)
{
    int ct;
    
    ct = 0;
    while (ct < max)
    {
        if (Element19_2(arr, ct, max, 1) && Element19_2(arr, ct, max, 2))
        {
            printf("%d.pos - %d",ct, arr[ct]);
            return (1);
        }
        ct++;
    }
    return (-1);
}

void Last21(char arr[])
{
    int ct;
    
    ct = 0;
    while(arr[ct])
    {
        ct++;
    }
    
    while (ct > 0)
    {
        if (arr[ct] == '1')
        {
            printf("%d.pos - %c",ct, arr[ct]);
            break;
        }
        ct--;
    }
}


int main()
{
    int iarray[] = {1,3,4,5,6};
    
    display(iarray);

    Subarray_1(iarray, 12);

    Missing_4(iarray);

    Reverse13(iarray, 2);

	return 0;
}